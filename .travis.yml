sudo: required

language: go
go:
  - "1.13.x"
  - "1.15.x"
  - "1.16.x"

branches:
  only:
  - master

install:
  - KUBE_VERSION=$(cat kube_version.txt)
  - tags="$(git ls-remote --tags https://github.com/kubernetes/kubernetes.git | grep 'v[1-9]\.[0-9]*\.[0-9]*$' | awk -F'tags/' '{print $2}' | sort -t. -k1,1n -k2,2n -k3,3n)"
  - new_tags="$(printf "%s" "$tags"| sed -n '{/\.0$/{g;p}};h' | tail -4) $(printf "%s" "$tags" | tail -1)"
  - mkdir -p $GOPATH/src/k8s.io && cd $GOPATH/src/k8s.io

script:
  - |
    go_version="$(go version)"
    echo -e "[Tags] $new_tags"
    
    for t in $new_tags; do
      echo "[check] $t"
      b=$(echo "${KUBE_VERSION}" | grep -w ${t} | wc -l)
      if [[ $b == 0 ]]; then
        echo "[Build] $t"

        go13_version="v1.16 v1.17 v1.18"
        go15_version="v1.19 v1.20"
        go16_version="v1.21"
        
        if [[ "${go13_version}" == *"${t%\.*}"* ]]; then
          [[  "${go_version}" != *"go1.13"* ]] && return 0
        elif [[ "${go15_version}" == *"${t%\.*}"* ]]; then
          [[  "${go_version}" != *"go1.15"* ]] && return 0
        elif [[ "${go16_version}" == *"${t%\.*}"* ]]; then
          [[  "${go_version}" != *"go1.16"* ]] && return 0
        else
          [[  "${go_version}" == *"go1.13"* ]] && return 0
          [[  "${go_version}" == *"go1.15"* ]] && return 0
        fi
        echo -e "[Build] ${go_version}"
        
        git clone -q --depth=1 --branch $t --progress https://github.com/kubernetes/kubernetes.git
        cd kubernetes
        git checkout -b $t $t
        git branch

        [ -f hack/print-workspace-status.sh ] && hack/print-workspace-status.sh
        sed -i 's#time.Hour \* 24 \* 365#time.Hour * 24 * 365 * 10#g'  cmd/kubeadm/app/constants/constants.go
        grep -n -R CertificateValidity ./*
        grep -n -R duration365d ./*

        KUBE_BUILD_PLATFORMS=linux/386 KUBE_GIT_TREE_STATE=clean make kubeadm GOFLAGS=-v || return 1
        UBE_BUILD_PLATFORMS=linux/amd64 KUBE_GIT_TREE_STATE=clean make kubeadm GOFLAGS=-v || return 1

        cp _output/local/bin/linux/386/kubeadm  _output/kubeadm-linux-386
        cp _output/local/bin/linux/amd64/kubeadm  _output/kubeadm-linux-amd64
        ls -al _output/kubeadm-*
        _output/kubeadm-linux-386 version
        _output/kubeadm-linux-amd64 version

        kube_tag=$t
        echo "kube_tag: ${kube_tag}"
        [[ "x${kube_tag:-}" == "x" ]] && return 1 || echo ok

        cd ${TRAVIS_BUILD_DIR}/
        git checkout master
        git pull
        git status

        echo "[Push file]"
        echo "${kube_tag}" >> kube_version.txt
        git config --global user.email "lework@yeah.net"
        git config --global user.name "lework"
        git remote rm origin
        git remote add origin https://${GITHUB_TOKEN}@github.com/lework/kubeadm-certs.git > /dev/null 2>&1
        git add -A
        git commit -m "[skip] add kubeadm $kube_tag"
        git push origin master
        break
      else
        echo "[skip] $t"
      fi
    done
    
cache:
  directories:
    - $HOME/.cache/go-build
    - $HOME/gopath/pkg/mod

deploy:
  provider: releases
  api_key: "${GITHUB_TOKEN}"
  tag_name: "${kube_tag}"
  file: "$GOPATH/src/k8s.io/kubernetes/_output/kubeadm-*"
  file_glob: "true"
  release_notes: "Set the validity period of the kubeadm certificate to 10 years.  \n source: https://github.com/kubernetes/kubernetes/releases/tag/${kube_tag}"
  skip_cleanup: true
  overwrite: true
  edge: true # opt in to dpl v2
  on:
    branch: master
    condition: $kube_tag != ""

notifications:
  email: false
